.song-form__wrapper
  = form_for @song, html: { class: 'disable-on-submit' } do |f|
    .song-owner{class: "#{'hide' unless user_has_groups(current_user)}"}
      = f.label :owner
      = f.select :global_owner, options_from_collection_for_select(current_user.actors, :global_id, :name, @song.owner.global_id)

    = f.label :name
    = f.text_field :name
    .song__duplicates-wrapper.hide
      Possible duplicates:
      - @songs.each do |song|
        .song__duplicate-link.hide{id: "song_id_#{song.id}"}
          = link_to song.name, song_path(song)
          = ', '

    = f.label :description
    = f.text_area :description

    = f.label 'Key'
    = f.select :music_key, options_for_select(Song::MUSICKEYS, @song.music_key), include_blank: true

    = f.label :scale
    = f.select :scale, options_for_select(Song::SCALES, @song.scale), include_blank: true

    = f.label :time_signature
    = f.select :time_signature, options_for_select(Song::TIME_SIGNATURES, @song.time_signature), include_blank: true

    = f.label :tempo
    = f.select :tempo, options_for_select((55..155).step(5).to_a, @song.tempo), include_blank: true

    = f.label 'Composers'
    = f.select :composer_list, options_for_select(current_user.song_tags('composers'), @song.composer_list), {include_blank: true}, {multiple: true, class: 'add-select2'}

    = f.label 'Performers / Versions'
    = f.select :version_list, options_for_select(current_user.song_tags('versions'), @song.version_list), {include_blank: true}, {multiple: true, class: 'add-select2'}

    = f.label 'Genres'
    = f.select :genre_list, options_for_select(current_user.song_tags('genres'), @song.genre_list), {include_blank: true}, {multiple: true, class: 'add-select2'}

    = f.label 'Miscellaneous Tags'
    = f.select :generic_list, options_for_select(current_user.song_tags('generics'), @song.generic_list), {include_blank: true}, {multiple: true, class: 'add-select2'}

    = f.label 'Admin Users'
    = f.select :admin_user_ids, options_from_collection_for_select(User.where.not(id: current_user.id), :id, :name, @song.admin_users.pluck(:id)), {include_blank: true}, {multiple: true, class: 'add-select2'}

    = f.label 'Admin Bands'
    = f.select :admin_group_ids, options_from_collection_for_select(current_user.actors, :id, :name, @song.admin_groups.pluck(:id)), {include_blank: true}, {multiple: true, class: 'add-select2'}
    %br

    = f.submit 'Save', class: 'save-song-btn'

:javascript
  var songs = #{@songs.reject { |song| song == @song }.map { |song| [song.id, song.name.downcase, song.tags.map(&:name), song_path(song)] } };

  $(document).ready(function() { 
    $('.song__duplicate-link').hide();

    $('#song_name').keyup(function() {
      $('.song__duplicates-wrapper').hide();
      var searchInput = $(this).val().toLowerCase();
      if (searchInput.length > 2) {
        songs.forEach(function(i) {
          if (i[1].includes(searchInput)) {
            $('.song__duplicates-wrapper').show();
            $('#song_id_' + i[0]).show();
          } else {
            $('#song_id_' + i[0]).hide();
          }
        });
      } else {
        $('.song__duplicates-wrapper').hide();
      }
    });

    $('.save-song-btn').click(function(e) {
      var songName = $('#song_name').val().toLowerCase();

      var matches = songs.filter(function(i) {
        return i[1] == songName
      });

      if (matches.length > 0) {
        if (!confirm("Are you sure this isn't a duplicate?")) {
          e.preventDefault();
        }
      }
    });
  });
