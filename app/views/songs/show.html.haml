- if !@current_user_song_role.admin? && @song.copiable?
  = button_to 'Copy Song', songs_path(song_id: @song.id), method: :post, form_class: 'inl-block right', class: 'btn-small copy-song-btn'
- if @current_user_song_role.viewer?
  = form_for @current_user_song_role, html: { class: 'inl-block right' } do |f|
    = f.hidden_field :song_id
    = f.hidden_field :role, value: 'follower'
    = f.submit 'Follow Song', class: 'btn-small follow-song-btn'
- elsif @current_user_song_role.follower?
  = form_for @current_user_song_role, html: { class: 'inl-block right' } do |f|
    = f.hidden_field :role, value: 'viewer'
    = f.submit 'Unfollow Song', class: 'btn-small unfollow-song-btn'

.song__name
  %h1
    = @song.name
- if @current_user_song_role.has_edit_permission?
  .song__edit-button
    = link_to '(edit)', edit_song_path(@song)
.song__play-form
  = form_for @current_user_song_role.plays.build, remote: true, html: { class: 'inl-block' } do |f|
    = f.hidden_field :song_id, value: @current_user_song_role.song_id
    = button_tag type: 'submit', class: 'play-btn' do
      %i.fa.fa-plus
      = ' play'
.song__creator.small-gray
  %p
    = "Created by #{@song.creator.name} on #{@song.created_at.strftime('%-m/%-d/%y')}"
.song__description
  %h2
    Description:
  %p
    = @song.description || 'None'
.song__key
  %h2
    = "Key: #{@song.music_key || 'none'}"
.song__scale
  %h2
    = "Scale: #{@song.scale || 'none'}"
.song__tempo
  %h2
    = "Tempo: #{@song.tempo || 'none'}"
.song_composers
  %h2.inl-block
    Composers:
  = @song.composer_list
.song__versions
  %h2.inl-block
    Performers / Versions:
  = @song.version_list
.song__genres
  %h2.inl-block
    Genres:
  = @song.genre_list
.song__generics
  %h2.inl-block
    Miscellaneous Tags:
  = @song.generic_list
.song__resources-wrapper
  %h2
    Attachments:
  - @song.resources.each do |resource|
    .song__resource
      - download_target = resource.resourceable.displayable_in_browser? ? '_blank' : '_top'
      = link_to resource.resourceable.url, target: download_target do
        %i{class: "fa #{resource.resourceable.icon}"}
        = resource.resourceable.url_name
      - if @current_user_song_role.has_edit_permission?
        .song__resource-delete-link
          = link_to resource_path(resource), method: :delete, data: { confirm: "Are you sure you want to delete this #{resource.resourceable.is_a?(FileResource) ? 'file' : 'link'}?" } do
            = '(delete)'

- if @current_user_song_role.has_edit_permission?
  = button_tag 'Attach File', class: 'add-resource-btn btn'
  = button_tag 'Add Link', class: 'add-link-btn btn'

  = form_for FileResource.new, html: { class: 'disable-on-submit' } do |f|
    = f.label 'Upload File'
    = f.file_field :main, name: 'file_resource[main]', accept: '.jpg, .jpeg, .png, .pdf, .gif, .docx, .doc, .xls, .xlsx, .mp3, .wav, .mp4, .txt, .mov'
    = hidden_field_tag :song_id, @song.id
    = button_tag type: 'submit', class: 'file_resource-upload-btn hide' do
      %i.fa.fa-save
      Upload

  = form_for UrlResource.new, html: { class: 'disable-on-submit' } do |f|
    = f.label 'Add Link'
    = f.text_field :url
    = hidden_field_tag :song_id, @song.id
    = button_tag type: 'submit', class: 'url_resource-submit-btn' do |f|
      %i.fa.fa-save
      Save

:javascript
  $(document).ready(function() {
    $('#new_file_resource').hide();
    $('.add-resource-btn').click(function() {
      $('#new_url_resource').hide();
      $('#new_file_resource').toggle();
    });

    $('#new_url_resource').hide();
    $('.add-link-btn').click(function() {
      $('#new_file_resource').hide();
      $('#new_url_resource').toggle();
    });
    $('input:file').change(function (){
      $('.file_resource-upload-btn').show();
    });

    $('.follow-song-btn').hover(function() {
      var calloutMgr = hopscotch.getCalloutManager();
      calloutMgr.createCallout({
        id: 'follow-song-btn-callout',
        target: '.follow-song-btn',
        placement: 'bottom',
        xOffset: -150,
        arrowOffset: 200,
        content: "Add this to your list of songs for easy searching and viewing. You won't be able to edit this song, only the original creator can edit/delete."
      });
    }, function() {
      var calloutMgr = hopscotch.getCalloutManager();
      calloutMgr.removeCallout('follow-song-btn-callout');
    });

    $('.unfollow-song-btn').hover(function() {
      var calloutMgr = hopscotch.getCalloutManager();
      calloutMgr.createCallout({
        id: 'unfollow-song-btn-callout',
        target: '.unfollow-song-btn',
        placement: 'bottom',
        xOffset: -150,
        arrowOffset: 200,
        content: "Click this to remove this song from your song list. You can always follow it again later."
      });
    }, function() {
      var calloutMgr = hopscotch.getCalloutManager();
      calloutMgr.removeCallout('unfollow-song-btn-callout');
    });

    $('.copy-song-btn').hover(function() {
      var calloutMgr = hopscotch.getCalloutManager();
      calloutMgr.createCallout({
        id: 'copy-song-btn-callout',
        target: '.copy-song-btn',
        placement: 'bottom',
        xOffset: -150,
        arrowOffset: 200,
        content: "Make your own copy of this song to edit and add attachments too. Your copy won't be affected by any changes the original creator makes to this one."
      });
    }, function() {
      var calloutMgr = hopscotch.getCalloutManager();
      calloutMgr.removeCallout('copy-song-btn-callout');
    });
  });
