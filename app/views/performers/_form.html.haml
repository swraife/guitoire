.performer__area
  - Area.all.sort_by { |area| area.name == 'other' ? 1 : 0 }.each_with_index do |area, index|
    = button_tag id: "area-#{area.id}", class: "area-btn btn btn-large left #{'clear_left' if (index == 2)}" do
      = t("area.name.#{area.name}")
      .area__selected-check.hide
        %i.fa.fa-check-circle

.performer__skills-fields-wrapper.hide
  = form_for performer do |f|
    = f.hidden_field :area_id
    - Area.all.each_with_index do |area|
      .performer__tags-collection.hide{ id: "area-tags-#{area.id}" }
        .performer__skills-prompt{ class: "#{'hide' if area.id == 4}" }
          %h3
            Select as many tags as you want
        = f.collection_check_boxes(:standard_skill_ids, area.tags, :id, :name) do |b|
          = b.label class: 'skill-checkbox' do
            = b.check_box
            = t(b.text, scope: [:skill_names], default: b.text)
    .performer__text-fields
      .performer__custom-tags
        %h3
          = t('.custom_tags')
        = f.select :user_input_skill_list,
                   options_for_select(current_user.performer_tags('user_input_skills'), @performer.user_input_skill_list),
                   {include_blank: true}, {multiple: true, class: 'add-select2'}
      .performer__avatar-field
        %h3
          = 'Upload Profile Picture'
        = f.file_field :avatar

      .performer__optional-settings
        = link_to '#', class: 'performer__optional-settings-link' do
          %i.fa.fa-caret-right
          Optional Settings
      .performer__info-fields.hide
        .med-horizontal-border

        = f.label 'What do you want to call this workspace?'
        = f.text_field :name, value: performer.name

        = f.label 'Choose a public name to go by:'
        = f.text_field :public_name, value: current_user.public_name

        = f.label 'What do you call the things you learn and perform? A song? trick? move? skill? Other?'
        - feat_name_options = Feat::FEAT_NAMES.dup.push(@performer.feat_name).compact.uniq
        = f.select :feat_name,
                   options_for_select(feat_name_options, @performer.feat_name),
                   {include_blank: true}, {multiple: true}

        = f.label "Add Custom Fields to the things above (For example, 'tempo' for songs, or 'Number of People' for circus moves)"
        = f.select :feat_contexts,
                   options_for_select(feat_context_options_for(@performer.actors), @performer.feat_contexts&.values),
                   {include_blank: true}, {multiple: true, class: 'add-select2'}

        = f.label 'When you combine those things in performance, what do you call it? A routine? act? set? other?'
        - routine_name_options = Routine::ROUTINE_NAMES.dup.push(@performer.routine_name).compact.uniq
        = f.select :routine_name,
                   options_for_select(routine_name_options, @performer.routine_name),
                   {include_blank: true}, {multiple: true}

        = f.label 'Who can see your stuff by default? (You can also hide/share things individually)'
        = f.select :visibility, options_for_select(enum_select_options(User, :visibilities), @performer.visibility)

      .lrg-horizontal-border

      = f.submit 'All Set!'
      = link_to "I'm not sure...", '#', class: 'performer__help-btn'

.performer__help-featherlight-wrapper

:javascript
  $(document).ready(function() {
    $('.area-btn').click(function(e) {
      e.preventDefault();
      var name = $.trim($(this).text());
      $('#performer_name').val(name);
      var areaId = $(this).attr('id').slice(5);
      $(this).fadeTo('', 1.0).find('.area__selected-check').addClass('inl-block').show();
      $('.area-btn').not(this).fadeTo('slow', 0.5).find('.area__selected-check').hide();
      $('#performer_area_id').val(areaId);
      $('.performer__tags-collection').hide();
      $('#area-tags-' + areaId).show();
      setFeatAndRoutineNames(name);
      $('.performer__skills-fields-wrapper').show();
    });

    $('.performer__optional-settings-link').click(function() {
      if ($('.performer__info-fields').is(':visible')) {
        $(this).find('.fa').removeClass('fa-caret-down').addClass('fa-caret-right');
        $('.performer__info-fields').hide();
      } else {
        $(this).find('.fa').removeClass('fa-caret-right').addClass('fa-caret-down');
        $('.performer__info-fields').show();        
      }
    });

    $('.performer__help-btn').click(function() {
      var missing_area_or_tags_help = "#{j t('.missing_area_or_tags_help')}";
      var multiple_workspaces_help = "#{j t('.multiple_workspaces_help')}";
      var $content = "<div class='performer__help-featherlight-wrapper'><h2>FAQ</h2><p>" + missing_area_or_tags_help + "</p>" +
        "<p>" + multiple_workspaces_help + "</p></div>";
      var config = $.featherlight.defaults;
      $.featherlight($content, config);
    });

    $('#performer_feat_name, #performer_routine_name').select2({
      theme: 'bootstrap',
      tags: true,
      maximumSelectionLength: 1,
    });
  });

  function setFeatAndRoutineNames(areaName) {
    if (#{!@performer.persisted?}) {
      if (areaName == 'Music') {
        $('#performer_feat_name').val('song').trigger('change');
        $('#performer_routine_name').val('set').trigger('change');
      } else if (areaName == 'Extreme Sports') {
        $('#performer_feat_name').val('trick').trigger('change');
        $('#performer_routine_name').val('routine').trigger('change');
      } else {
        $('#performer_feat_name').val('skill').trigger('change');
        $('#performer_routine_name').val('routine').trigger('change');
      }
    }
  }

